events {}

http {
  # Use Docker’s embedded DNS inside containers
  resolver 127.0.0.11 ipv6=off valid=30s;

  # OPTIONAL: larger uploads if you need them
  # client_max_body_size 50m;

  server {
    listen 80;
    listen [::]:80;
    server_name torum.duckdns.org;

    # Let’s Encrypt HTTP-01
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name torum.duckdns.org;

    ssl_certificate     /etc/letsencrypt/live/torum.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/torum.duckdns.org/privkey.pem;

    # If your backend expects / (no /api prefix), use trailing slash to strip it:
    location /api/ {
      proxy_pass http://backend:8000/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    location / {
      proxy_pass http://frontend:5173;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }
}
