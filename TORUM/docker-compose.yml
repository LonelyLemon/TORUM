services:
  db:
    image: postgres:16.9
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [app]

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 8000
    volumes:
      - ./backend:/app/backend
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks: [app]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - 5173
    volumes:
      - ./frontend:/app/frontend
    env_file:
      - ./frontend/.env.production
    stdin_open: true
    tty: true
    networks: [app]

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.http.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks: [app]

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: /bin/sh
    command: -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot && echo "Renew checked"; sleep 12h; done'
    networks: [app]
  
networks:
  app:

volumes:
  postgres_data: