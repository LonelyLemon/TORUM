"""initial migration

Revision ID: c9a44e1e216a
Revises: 
Create Date: 2025-07-29 04:42:27.165617

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c9a44e1e216a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('token_blacklist')
    op.drop_table('refresh_token')
    op.drop_table('posts')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('posts',
    sa.Column('post_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('post_owner', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('post_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('post_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_owner'], ['users.user_id'], name=op.f('posts_post_owner_fkey')),
    sa.PrimaryKeyConstraint('post_id', name=op.f('posts_pkey'))
    )
    op.create_table('refresh_token',
    sa.Column('refresh_token_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('refresh_token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_expired', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('refresh_token_user_id_fkey')),
    sa.PrimaryKeyConstraint('refresh_token_id', name=op.f('refresh_token_pkey'))
    )
    op.create_table('token_blacklist',
    sa.Column('token_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_blacklisted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('token_id', name=op.f('token_blacklist_pkey')),
    sa.UniqueConstraint('token', name=op.f('token_blacklist_token_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
